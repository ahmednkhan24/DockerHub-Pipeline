{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Basic Crud API",
    "description": "Node API to DockerHub"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Root",
      "description": "Root Route"
    },
    {
      "name": "Data: Read and Create",
      "description": "(CR)UD"
    },
    {
      "name": "Data: Update and Destroy",
      "description": "CR(UD)"
    },
    {
      "name": "Seed and Purge",
      "description": "Insert sample data, or delete all existing data"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "summary": "Get a success message",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/data": {
      "get": {
        "tags": [
          "Data: Read and Create"
        ],
        "summary": "Get all data in the system",
        "responses": {
          "200": {
            "description": "Array of all data in the system"
          }
        }
      },
      "post": {
        "tags": [
          "Data: Read and Create"
        ],
        "summary": "Add a piece of data into the system",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "Data to save",
            "example": {
              "payload": 5
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Data successfully inserted into the system"
          },
          "400": {
            "description": "Request body is either empty or does not have a payload property"
          }
        }
      }
    },
    "/data/{dataToFind}": {
      "parameters": [
        {
          "name": "dataToFind",
          "in": "path",
          "required": true,
          "description": "value in system to find",
          "type": "string"
        }
      ],
      "put": {
        "summary": "Update a piece of data in the system",
        "tags": [
          "Data: Update and Destroy"
        ],
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "New data to update to",
            "example": {
              "payload": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data is updated"
          },
          "400": {
            "description": "Request body is either empty or does not have a payload property"
          },
          "500": {
            "description": "System does not contain the given dataToFind"
          }
        }
      },
      "delete": {
        "summary": "Delete a piece of data in the system",
        "tags": [
          "Data: Update and Destroy"
        ],
        "responses": {
          "200": {
            "description": "Data is deleted"
          },
          "500": {
            "description": "System does not contain the given dataToFind"
          }
        }
      }
    },
    "/seed": {
      "post": {
        "tags": [
          "Seed and Purge"
        ],
        "summary": "Insert predefined sample data into the system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "All sample data inserted into the system"
          }
        }
      },
      "delete": {
        "tags": [
          "Seed and Purge"
        ],
        "summary": "Delete all data in the system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All data deleted from the system"
          }
        }
      }
    }
  }
}
